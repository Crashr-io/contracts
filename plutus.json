{
  "preamble": {
    "title": "jpg-store/marketplace",
    "description": "Aiken contracts for project 'jpg-store/marketplace'",
    "version": "0.0.0",
    "plutusVersion": "v2",
    "compiler": {
      "name": "Aiken",
      "version": "v1.0.24-alpha+982eff4"
    },
    "license": "Apache-2.0"
  },
  "validators": [
    {
      "title": "ask.spend",
      "datum": {
        "title": "datum",
        "schema": {
          "$ref": "#/definitions/ask~1Datum"
        }
      },
      "redeemer": {
        "title": "redeemer",
        "schema": {
          "$ref": "#/definitions/ask~1Redeemer"
        }
      },
      "compiledCode": "59061101000032323232323232323222232325333008323232323232323232323232323232323253330193370e900000109919299980d99b8748008c0680404c8c8c8c8c8c8c8c8c8c94ccc0940104cdc42400066600200a00c010264646464646464646464646464a66606a607000c2646464a66607060760042646464a666070a666070a66607001220102940400452808010a503371201e00466e3c01122100375a606e0022c60720026eacc0d4008dd718198008b181b00299baf0064c0150d8799fd87a9f581c84cc25ea4c29951d40b443b95bbc5676bc425470f96376d1984af9abffd8799fd8799fd87a9f581c2c967f4bd28944b06462e13c5e3f5d5fa6e03f8567569438cd833e6dffffffff003375e002024606600260660046eacc0c4004c0c4008c0bc004c09c010cdc199b83337040029032240c4903219980180080426103d8798000302c006302a0052223232323232323232533302f3375e0020122646464646464a66606a66ebc00c02c4c94ccc0e4c0f00284c8c8c94ccc0f0c0fc0084c94ccc0e8cdc7802245001533303a533303a3371200c002266e21200000614a0266e000194ccc0f40285200013301701200a1616375a60760022c607a0026eacc0e4008dd7181b8008b181d0048b1bad303900130390023037001302f002303600b303400a1630330013033002375660620026062004605e002604e004605c008605800660020024446464646464646464a66605a66ebc005300103d8798000132323232323253330333375e006016264a66606e60740142646464a666074607a004264a66607066e3c011221001533303853330383371200c002266e21200000614a0266e000194ccc0ec02852000133301601601200a1616375a60720022c60760026eacc0dc008dd7181a8008b181c0048b1bad303700130370023035001302d002303400a303200916303100130310023756605e002605e004605a002604a00460580066054004646600200297ae1011e581c15df89fe62968415bac4de9d8576da39c34db4717f46332572aca3eb00811e581c53391ebae9fa352a1108e2769df9baf0d3efcab0f49404bd6ac56bd4001129998130008a501323253330253300d00f00214a226600800800260540046eb8c0a0004ccc8c8c8c0040048894ccc094cdc4a40280022666006006605660566056605660566056605660566056605600466e040052014133004002001300100122253330233370e002900008010999801801981480119b8100148008044018dd61812000980e00d99ba548010cc084dd49b94376600297ae03021001301901016375a603e002602e02a2660020066eb8c078c07cc05c05888c8cc00400400c894ccc07c00452809919299980f19b8f00200514a226600800800260460046eb8c084004c05804cdd6180d800980d800980d000980c800980c000980b800980b0011bac301400130140013013001300a00330100013010002300e001300600314984d958c94ccc020cdc3a400000226464a66601a60200042930b1bad300e0013006004153330083370e90010008a99980598030020a4c2c2c600c0066464a66601066e1d2000001132323232533300f3012002132498c8cc004004010894ccc044004526132330030033015002323253330103370e9000000899191919299980b980d00109924c64a66602a66e1d2000001132323232533301c301f00213232498c94ccc06ccdc3a400000226464a66604060460042649319299980f19b87480000044c8c94ccc08cc0980084c926301a001163024001301c0021533301e3370e90010008991919191919299981398150010a4c2c6eb4c0a0004c0a0008dd6981300098130011bad3024001301c00216301c00116302100130190031533301b3370e90010008a99980f180c8018a4c2c2c603200460260062c603a002603a004603600260260082c60260062c6eb4c060004c060008c058004c03800858c038004c04c00458dd7180800098080011bac300e001300600516300600423253330083370e900000089919299980698080010a4c2c6eb8c038004c01800854ccc020cdc3a400400226464a66601a60200042930b1bae300e0013006002163006001230053754002460066ea80055cd2ab9d5573caae7d5d02ba157441",
      "hash": "626e0d21819cb8f0b6709a537211b2cdcfaa09ace870f46b932fbca0"
    }
  ],
  "definitions": {
    "ByteArray": {
      "dataType": "bytes"
    },
    "Int": {
      "dataType": "integer"
    },
    "List$jpg/types/Payout": {
      "dataType": "list",
      "items": {
        "$ref": "#/definitions/jpg~1types~1Payout"
      }
    },
    "Option$aiken/transaction/credential/Referenced$aiken/transaction/credential/Credential": {
      "title": "Optional",
      "anyOf": [
        {
          "title": "Some",
          "description": "An optional value.",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/aiken~1transaction~1credential~1Referenced$aiken~1transaction~1credential~1Credential"
            }
          ]
        },
        {
          "title": "None",
          "description": "Nothing.",
          "dataType": "constructor",
          "index": 1,
          "fields": []
        }
      ]
    },
    "aiken/transaction/credential/Address": {
      "title": "Address",
      "description": "A Cardano `Address` typically holding one or two credential references.\n\n Note that legacy bootstrap addresses (a.k.a. 'Byron addresses') are\n completely excluded from Plutus contexts. Thus, from an on-chain\n perspective only exists addresses of type 00, 01, ..., 07 as detailed\n in [CIP-0019 :: Shelley Addresses](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0019/#shelley-addresses).",
      "anyOf": [
        {
          "title": "Address",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "payment_credential",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Credential"
            },
            {
              "title": "stake_credential",
              "$ref": "#/definitions/Option$aiken~1transaction~1credential~1Referenced$aiken~1transaction~1credential~1Credential"
            }
          ]
        }
      ]
    },
    "aiken/transaction/credential/Credential": {
      "title": "Credential",
      "description": "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
      "anyOf": [
        {
          "title": "VerificationKeyCredential",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/ByteArray"
            }
          ]
        },
        {
          "title": "ScriptCredential",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    },
    "aiken/transaction/credential/Referenced$aiken/transaction/credential/Credential": {
      "title": "Referenced",
      "description": "Represent a type of object that can be represented either inline (by hash)\n or via a reference (i.e. a pointer to an on-chain location).\n\n This is mainly use for capturing pointers to a stake credential\n registration certificate in the case of so-called pointer addresses.",
      "anyOf": [
        {
          "title": "Inline",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/aiken~1transaction~1credential~1Credential"
            }
          ]
        },
        {
          "title": "Pointer",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "title": "slot_number",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "transaction_index",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "certificate_index",
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    },
    "ask/Datum": {
      "title": "Datum",
      "description": "A listing requires a datum that has\n the owner's payment key and a list of payouts.\n We do not need to specify the marketplace payout\n in `payouts` even though it will be in\n one of the outputs.",
      "anyOf": [
        {
          "title": "Datum",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "payouts",
              "description": "Does not contain the marketplace payout.\n This is usually royalty and seller payouts.",
              "$ref": "#/definitions/List$jpg~1types~1Payout"
            },
            {
              "title": "owner",
              "description": "Flexible to allow discounts\n The key that listed the NFT",
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    },
    "ask/Redeemer": {
      "title": "Redeemer",
      "description": "A user can either buy a token\n or cancel/update the listing.",
      "anyOf": [
        {
          "title": "Buy",
          "description": "`payout_outputs_offset` tells us where\n the outputs containing the payouts start.",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "payout_outputs_offset",
              "$ref": "#/definitions/Int"
            }
          ]
        },
        {
          "title": "WithdrawOrUpdate",
          "description": "Cancel or update a listing.",
          "dataType": "constructor",
          "index": 1,
          "fields": []
        }
      ]
    },
    "jpg/types/Payout": {
      "title": "Payout",
      "anyOf": [
        {
          "title": "Payout",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "address",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Address"
            },
            {
              "title": "amount_lovelace",
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    }
  }
}